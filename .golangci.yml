# golangci.com configuration
# https://github.com/golangci/golangci-lint

linters-settings:
  stylecheck:
    # https://staticcheck.dev/docs/configuration/options/#dot_import_whitelist
    # Default: ["github.com/mmcloughlin/avo/build", "github.com/mmcloughlin/avo/operand", "github.com/mmcloughlin/avo/reg"]
    dot-import-whitelist:
      - fmt
    # https://staticcheck.dev/docs/configuration/options/#initialisms
    # Default: ["ACL", "API", "ASCII", "CPU", "CSS", "DNS", "EOF", "GUID", "HTML", "HTTP", "HTTPS", "ID", "IP", "JSON", "QPS", "RAM", "RPC", "SLA", "SMTP", "SQL", "SSH", "TCP", "TLS", "TTL", "UDP", "UI", "GID", "UID", "UUID", "URI", "URL", "UTF8", "VM", "XML", "XMPP", "XSRF", "XSS", "SIP", "RTP", "AMQP", "DB", "TS"]
    initialisms: ["ACL", "API", "ASCII", "CPU", "CSS", "DNS", "EOF", "GUID", "HTML", "HTTP", "HTTPS", "ID", "IP", "JSON", "QPS", "RAM", "RPC", "SLA", "SMTP", "SQL", "SSH", "TCP", "TLS", "TTL", "UDP", "UI", "GID", "UID", "UUID", "URI", "URL", "UTF8", "VM", "XML", "XMPP", "XSRF", "XSS", "SIP", "RTP", "AMQP", "DB", "TS"]
    # https://staticcheck.dev/docs/configuration/options/#http_status_code_whitelist
    # Default: ["200", "400", "404", "500"]
    http-status-code-whitelist: ["200", "400", "404", "500"]
    # STxxxx checks in https://staticcheck.dev/docs/configuration/options/#checks
    # Example (to disable some checks): [ "all", "-ST1000", "-ST1003", "-ST1016", "-ST1020", "-ST1021", "-ST1022" ]
    # Default: ["*"]
    checks:
      # Incorrect or missing package comment.
      # https://staticcheck.dev/docs/checks/#ST1000
      - ST1000
      # Dot imports are discouraged.
      # https://staticcheck.dev/docs/checks/#ST1001
      - ST1001
      # Poorly chosen identifier.
      # https://staticcheck.dev/docs/checks/#ST1003
      - ST1003
      # Incorrectly formatted error string.
      # https://staticcheck.dev/docs/checks/#ST1005
      - ST1005
      # Poorly chosen receiver name.
      # https://staticcheck.dev/docs/checks/#ST1006
      - ST1006
      # A function's error value should be its last return value.
      # https://staticcheck.dev/docs/checks/#ST1008
      - ST1008
      # Poorly chosen name for variable of type 'time.Duration'.
      # https://staticcheck.dev/docs/checks/#ST1011
      - ST1011
      # Poorly chosen name for error variable.
      # https://staticcheck.dev/docs/checks/#ST1012
      - ST1012
      # Should use constants for HTTP error codes, not magic numbers.
      # https://staticcheck.dev/docs/checks/#ST1013
      - ST1013
      # A switch's default case should be the first or last case.
      # https://staticcheck.dev/docs/checks/#ST1015
      - ST1015
      # Use consistent method receiver names.
      # https://staticcheck.dev/docs/checks/#ST1016
      - ST1016
      # Don't use Yoda conditions.
      # https://staticcheck.dev/docs/checks/#ST1017
      - ST1017
      # Avoid zero-width and control characters in string literals.
      # https://staticcheck.dev/docs/checks/#ST1018
      - ST1018
      # Importing the same package multiple times.
      # https://staticcheck.dev/docs/checks/#ST1019
      - ST1019
      # The documentation of an exported function should start with the function's name.
      # https://staticcheck.dev/docs/checks/#ST1020
      - ST1020
      # The documentation of an exported type should start with type's name.
      # https://staticcheck.dev/docs/checks/#ST1021
      - ST1021
      # The documentation of an exported variable or constant should start with variable's name.
      # https://staticcheck.dev/docs/checks/#ST1022
      - ST1022
      # Redundant type in variable declaration.
      # https://staticcheck.dev/docs/checks/#ST1023
      - ST1023
  gocyclo:
    min-complexity: 15
  dupl:
    threshold: 100
  goconst:
    min-len: 2
    min-occurrences: 2
  misspell:
    locale: US
  lll:
    line-length: 140
  goimports:
    local-prefixes: github.com/golangci/golangci-lint
  gocritic:
    enabled-tags:
      - performance
      - style
      - experimental
    disabled-checks:
      - dupImport # https://github.com/go-critic/go-critic/issues/845
      - whyNoLint

linters:
  disable:
    - godox # disable errors on TODO's
    - funlen
    - rowserrcheck
    - godot
  enable:
    - asciicheck
    - bodyclose
    - dogsled
    - dupl
    - errcheck
    - exhaustive
    - copyloopvar
    - gochecknoglobals
    - gochecknoinits
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - goheader
    - goimports
    - gomodguard
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - ineffassign
    - lll
    - misspell
    - nakedret
    - nestif
    - noctx
    - nolintlint
    - prealloc
    - staticcheck
    - stylecheck
    - testpackage
    - typecheck
    - unconvert
    - unparam
    - unused
    - whitespace

run:
  timeout: 5m
  tests: false
